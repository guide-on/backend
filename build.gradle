plugins {
    id 'java'
    id 'war'
}

group 'com.guideon'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.39'
    lombokVersion = '1.18.38'
    aspectjVersion = '1.9.20.1'
    log4j2Version = '2.24.1'
    jacksonDatabind = '2.12.7.1'
    jacksonCoreAnn  = '2.12.7'
    springSecurityVersion = '5.8.13'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // ===== Spring Framework 관련 의존성 =====
    implementation ("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'

    // ===== AOP (Aspect-Oriented Programming) 관련 의존성 =====
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    implementation "org.aspectj:aspectjweaver:${aspectjVersion}"

    // ===== 웹 개발 관련 의존성 (JSP, Servlet, JSTL) =====
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

    // ===== 로깅 시스템 (Log4j2) - 최신 버전으로 업데이트 =====
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"
    // SQL 로깅 라이브러리
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // ===== XML 처리 관련 =====
    implementation 'xerces:xercesImpl:2.12.2'

    // ===== 개발 편의성 도구 =====
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // ===== JSON 처리 =====
    // Jackson - JSON 직렬화/역직렬화 라이브러리 (Spring 5.3.x와 호환되는 최신 버전)
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabind}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonCoreAnn}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonCoreAnn}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonCoreAnn}"

    // ===== 데이터베이스 관련 의존성 =====
    implementation 'com.mysql:mysql-connector-j:9.3.0'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    // 스프링 데이터베이스 지원
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    // MyBatis 핵심 라이브러리
    implementation 'org.mybatis:mybatis:3.5.15'
    implementation 'org.mybatis:mybatis-spring:2.1.2'

    // ===== Swagger 관련 의존성 =====
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // ===== Spring Security 관련 의존성 =====
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

    // Spring Security OAuth2
    implementation 'org.springframework.security:spring-security-oauth2-client:5.7.3'
    implementation 'org.springframework.security:spring-security-oauth2-jose:5.7.3'
    implementation 'org.springframework.security:spring-security-oauth2-core:5.7.3'

    // ===== JWT 관련 의존성 =====
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // ====== Redis 연동 ======
    implementation 'org.springframework.data:spring-data-redis:2.7.5'
    implementation 'io.lettuce:lettuce-core:6.1.8.RELEASE'

    // ===== 테스트 관련 의존성 =====
    testImplementation "org.springframework:spring-test:${springVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // env 관련
    implementation 'io.github.cdimascio:dotenv-java:3.0.2'
}

test {
    useJUnitPlatform()
}